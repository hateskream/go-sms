// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: copyfrom.go

package db

import (
	"context"
)

// iteratorForCreateSpaceFeatures implements pgx.CopyFromSource.
type iteratorForCreateSpaceFeatures struct {
	rows                 []CreateSpaceFeaturesParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateSpaceFeatures) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateSpaceFeatures) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].SpaceID,
		r.rows[0].FeatureID,
		r.rows[0].IsRequired,
	}, nil
}

func (r iteratorForCreateSpaceFeatures) Err() error {
	return nil
}

func (q *Queries) CreateSpaceFeatures(ctx context.Context, arg []CreateSpaceFeaturesParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"space_features"}, []string{"space_id", "feature_id", "is_required"}, &iteratorForCreateSpaceFeatures{rows: arg})
}
